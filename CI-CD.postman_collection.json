{
	"info": {
		"_postman_id": "9683e543-5a0c-ca02-8741-8565e046d9ef",
		"name": "CI/CD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create support queue- 1.3 / 1.4 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "922c9a1a-c4d7-4dca-9b8b-edd5496ac043",
						"exec": [
							"pm.test(\"Request is initiated\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    if (jsonData.status==200){",
							"        pm.environment.set(\"loanrequestid\",jsonData.requestid);",
							"        pm.environment.set(\"refNum\",jsonData.referencenumber);",
							"    }",
							"});",
							"",
							"",
							"var devurl = pm.environment.get(\"devurl\");",
							"var url = devurl + \"/api/support/createsupportqueue\";",
							"",
							"",
							"",
							"",
							"pm.sendRequest({",
							"url: url,",
							"method: 'POST',",
							"header: {",
							"    'Content-Type': 'application/json',",
							"    'Authorization': 'JWT '+ pm.environment.get(\"supporttoken\")",
							"},",
							"body: {",
							"    mode: 'raw',",
							"    raw: JSON.stringify({",
							"\"phone\":\"9082405520\",",
							"\"category\":\"education\",",
							"\"requestedamount\":199999,",
							"\"notes\":\"test fcm customer notification\",",
							"\"address\": \"B 2103,club meadows, Hiranandani, Hulimavu - B, Akshaya Gardens, Akshayanagar, Bengaluru 560076\",",
							"\"locality\": \"Hulimavu\",",
							"\"location\": {",
							"  \"x\": 12.8755655,",
							"  \"y\": 77.6125612  ",
							"},",
							"\"city\":\"bangalore\",",
							"\"istakeover\":false,",
							"\"isscheduled\":false,",
							"\"lpid\":\"5ac601e1f06f2ce544804433\",",
							"\"branchid\":\"5ac60256f06f2ce544804434\",",
							"\"schemeid\": \"2\",",
							"\"addressparts\":{",
							"  \"floor\": \"B 2103\",",
							"  \"house\": \"Club Medows\"",
							"},",
							"\"locationsource\":\"reaper\",",
							"\"cityid\":1,",
							"\"tranxmode\": \"cash\"",
							"})",
							"}",
							"}, function (err, res) {",
							"    //pm.environment.set(\"var\",res.text());",
							"    //var jsonData = res.json();",
							"    //console.log(pm.environment.get(\"a\"));",
							"    //pm.expect(jsonData.ErrorMsg).to.eql(\"User cannot have two active requests..\");",
							"    pm.test(\"User cannot have two active requests\", function() {",
							"        pm.expect(res.text()).to.include(\"User cannot have two active requests\");",
							"    });",
							"});",
							"//pm.expect(pm.environment.get(\"var\")).to.include(\"User cannot have two active requests\");",
							"",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"phone\":\"9082405520\",",
							"    \"category\":\"education\",",
							"    \"requestedamount\":199999,",
							"    \"notes\":\"test fcm customer notification\",",
							"    \"address\": \"B 2103,club meadows, Hiranandani, Hulimavu - B, Akshaya Gardens, Akshayanagar, Bengaluru 560076\",",
							"    \"locality\": \"Hulimavu\",",
							"    \"location\": {",
							"      \"x\": 12.8755655,",
							"      \"y\": 77.6125612  ",
							"    },",
							"    \"city\":\"bangalore\",",
							"    \"istakeover\":false,",
							"    \"isscheduled\":false,",
							"    \"lpid\":\"5ac601e1f06f2ce544804433\",",
							"    \"branchid\":\"5ac60256f06f2ce544804434\",",
							"    \"schemeid\": \"2\",",
							"    \"addressparts\":{",
							"      \"floor\": \"B 2103\",",
							"      \"house\": \"Club Medows\"",
							"    },",
							"    \"locationsource\":\"reaper\",",
							"    \"cityid\":1,",
							"    \"tranxmode\": \"cash\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid token found\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");",
							"    // var jsonData = res.json();",
							"    // pm.expect(jsonData.Error).to.eql(\"Invalid Token\");",
							"});",
							"",
							"});",
							"    ",
							"    ",
							"    ",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"phone\":\"9082405520\",",
							"    \"category\":\"education\",",
							"    \"requestedamount\":199999,",
							"    \"notes\":\"test fcm customer notification\",",
							"    \"address\": \"B 2103,club meadows, Hiranandani, Hulimavu - B, Akshaya Gardens, Akshayanagar, Bengaluru 560076\",",
							"    \"locality\": \"Hulimavu\",",
							"    \"location\": {",
							"      \"x\": 12.8755655,",
							"      \"y\": 77.6125612  ",
							"    },",
							"    \"city\":\"bangalore\",",
							"    \"istakeover\":false,",
							"    \"isscheduled\":false,",
							"    \"lpid\":\"5ac601e1f06f2ce544804433\",",
							"    \"branchid\":\"5ac60256f06f2ce544804434\",",
							"    \"schemeid\": \"2\",",
							"    \"addressparts\":{",
							"      \"floor\": \"B 2103\",",
							"      \"house\": \"Club Medows\"",
							"    },",
							"    \"locationsource\":\"reaper\",",
							"    \"cityid\":1,",
							"    \"tranxmode\": \"cash\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Only support and admins are allowed access. (Other token used)\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Only support and admins are allowed access\");",
							"});",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{supporttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"phone\":\"9082405520\",\n    \"category\":\"education\",\n    \"requestedamount\":199999,\n    \"notes\":\"test fcm customer notification\",\n    \"address\": \"B 2103,club meadows, Hiranandani, Hulimavu - B, Akshaya Gardens, Akshayanagar, Bengaluru 560076\",\n    \"locality\": \"Hulimavu\",\n    \"location\": {\n      \"x\": 12.8755655,\n      \"y\": 77.6125612  \n    },\n    \"city\":\"bangalore\",\n    \"istakeover\":false,\n    \"isscheduled\":false,\n    \"lpid\":\"5ac601e1f06f2ce544804433\",\n    \"branchid\":\"5ac60256f06f2ce544804434\",\n    \"schemeid\": \"2\",\n    \"addressparts\":{\n      \"floor\": \"B 2103\",\n      \"house\": \"Club Medows\"\n    },\n    \"locationsource\":\"reaper\",\n    \"cityid\":1,\n    \"tranxmode\": \"cash\"\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/support/createsupportqueue",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"support",
						"createsupportqueue"
					]
				},
				"description": "Customer requests for a new loan\n\nRequest Parameters:\n\nRequired: 'phone', 'category', 'requestedamount', 'istakeover', 'lpid', 'branchid', 'city'\n\n'category' must be one of the following:\n\n'business','home','education','medical','vehicle','wedding','travel','other'\n\n'requestedamount' - customer requested money, \n\n'notes' - aditional notes,\n\n'address' : from map, \n\n'location': JSON - location.x and location.y needs to be sent,\n\n'timeslotstart' - timestamp, \n\n'timeslotend' - timstamp,\n\n'istakeover': boolean,\n\n'lpid': string,\n\n'branchid': string"
			},
			"response": []
		},
		{
			"name": "Move to appraiser queue - 1.41 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f34ad0bb-f819-40e3-adac-3eb8d95af804",
						"exec": [
							"pm.test(\"Executives assigned successfully (Status code 200)\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/citymgr/movetoagentqueue\"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Executives already assigned\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"You are not allowed to edit this request\");    ",
							"});",
							"    ",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":\"wrong_id\",",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid loan request id\", function() {",
							"",
							"    //var jsonData = res.json();",
							"    //console.log(pm.environment.get(\"a\"));",
							"    //pm.expect(jsonData.ErrorMsg).to.eql(\"User cannot have two active requests..\");",
							"    pm.expect(res.text()).to.include(\"You are not allowed to edit this request\");    ",
							"});",
							"    ",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    ",
							"    //var jsonData = res.json();",
							"    //console.log(res.text());",
							"    //pm.expect(jsonData.ErrorMsg).to.eql(\"User cannot have two active requests..\");",
							"    pm.test(\"Invalid Token\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");    ",
							"});",
							"    ",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Access denied ~ wrong token used\", function() {",
							"",
							"    //var jsonData = res.json();",
							"    //console.log(res.text());",
							"    //pm.expect(jsonData.ErrorMsg).to.eql(\"User cannot have two active requests..\");",
							"    pm.expect(res.text()).to.include(\"You do not have access\");    ",
							"});",
							"    ",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT {{citymgrtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"requestid\":\"{{loanrequestid}}\",\n  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",\n  \"appraiser\":\"\",\n  \"auditor\":\"\",\n  \"eta\":1496432000,\n  \"etd\":1496232000\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/citymgr/movetoagentqueue",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"citymgr",
						"movetoagentqueue"
					]
				},
				"description": "Assign multiple executives to a transaction.\n\nAn apphandler is a required parameter.\n\nThe appraiser and an auditor are optional.\n\nETA is time that agent needs to arrive in UTC - UNIX timestamp format(seconds elapsed).\n\nThis API needs to be invoked 15 minutes before the expected start time."
			},
			"response": []
		},
		{
			"name": "Assign executives to a request - 1.45 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77748015-42c5-4db8-9ded-c6134350867d",
						"exec": [
							"pm.test(\"Executives assigned successfully (Status code 200)\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/citymgr/movetoagentqueue\"",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Executives already assigned\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"You are not allowed to edit this request\");    ",
							"});",
							"    ",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":\"wrong_id\",",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid loan request id\", function() {",
							"",
							"    //var jsonData = res.json();",
							"    //console.log(pm.environment.get(\"a\"));",
							"    //pm.expect(jsonData.ErrorMsg).to.eql(\"User cannot have two active requests..\");",
							"    pm.expect(res.text()).to.include(\"You are not allowed to edit this request\");    ",
							"});",
							"    ",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid Token\", function() {",
							"",
							"    //var jsonData = res.json();",
							"    //console.log(res.text());",
							"    //pm.expect(jsonData.ErrorMsg).to.eql(\"User cannot have two active requests..\");",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");    ",
							"});",
							"    ",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"  \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",",
							"  \"appraiser\":\"\",",
							"  \"auditor\":\"\",",
							"  \"eta\":1496432000,",
							"  \"etd\":1496232000",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Access denied ~ wrong token used\", function() {",
							"",
							"    //var jsonData = res.json();",
							"    //console.log(res.text());",
							"    //pm.expect(jsonData.ErrorMsg).to.eql(\"User cannot have two active requests..\");",
							"    pm.expect(res.text()).to.include(\"You do not have access\");    ",
							"});",
							"    ",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "JWT {{citymgrtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"requestid\":\"{{loanrequestid}}\",\n  \"assignedagent\":\"5c19f3c752dff5f7bdb8d555\",\n  \"appraiser\":\"\",\n  \"auditor\":\"\",\n  \"eta\":1496232000\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/citymgr/assigntransaction",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"citymgr",
						"assigntransaction"
					]
				},
				"description": "Assign multiple executives to a transaction.\n\nAn apphandler is a required parameter.\n\nThe appraiser and an auditor are optional.\n\nETA is time that agent needs to arrive in UTC - UNIX timestamp format(seconds elapsed).\n\nThis API needs to be invoked 15 minutes before the expected start time."
			},
			"response": []
		},
		{
			"name": "request picked - 1.6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f262f12-706a-422e-b5b7-50c8882067fd",
						"exec": [
							"pm.test(\"Picked request successfully\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/pickarequest\";",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"wrong_id\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid loan request id\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Please checkout of customer location first\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\")",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Please checkout of customer location first\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Please checkout of customer location first\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\")",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid Token\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\")",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Used support token instead of agenttoken\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"You must be the app handler to pick a loan request\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\")",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Used other type of tokens instead of agenttoken\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{agenttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\":\"{{loanrequestid}}\"\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/pickarequest",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"pickarequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "mark as arrived 1.9",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "997739f6-aec6-4c2e-ae94-f8363ecf650f",
						"exec": [
							"pm.test(\"Mark as arrived\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/markasarrived\";",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"wrong_id\",",
							"    \"verifiedlocation\":{",
							"        \"x\":12.34,",
							"        \"y\":75.12",
							"    }",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid loan request id\", function() {",
							"pm.expect(res.text()).to.include(\"Request not found, or already serviced\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verifiedlocation\":{",
							"        \"x\":12.34,",
							"        \"y\":75.12",
							"    }",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Request not found, or already serviced\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Request not found, or already serviced\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verifiedlocation\":{",
							"        \"x\":12.34,",
							"        \"y\":75.12",
							"    }",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Invalid Token\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verifiedlocation\":{",
							"        \"x\":12.34,",
							"        \"y\":75.12",
							"    }",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"agenttoken not used. Some other token detected (supporttoken)\", function() {",
							"pm.expect(res.text()).to.include(\"Request not found, or already serviced\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verifiedlocation\":{",
							"        \"x\":12.34,",
							"        \"y\":75.12",
							"    }",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"agenttoken not used. Some other token detected (citymgrtoken)\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{supporttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\":\"{{loanrequestid}}\",\n    \"verifiedlocation\":{\n        \"x\":12.34,\n        \"y\":75.12\n    }\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/markasarrived",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"markasarrived"
					]
				}
			},
			"response": []
		},
		{
			"name": "agent verification - 2.1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "043076b1-9c70-455f-8859-27246ac4e98a",
						"exec": [
							"pm.test(\"Agent verification\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/agentverification\";",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verificationcode\":\"8874\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"    pm.test(\"Request not found or appraisal completed already\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Request not found or appraisal completed already\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"wrong_id\",",
							"    \"verificationcode\":\"8874\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid loan request id\", function() {",
							"    pm.expect(res.text()).to.include(\"Request not found or appraisal completed already\");    ",
							"});",
							"});",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verificationcode\":\"8874\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid Token\", function() {",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verificationcode\":\"8874\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (supportoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"Request not found or appraisal completed already\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verificationcode\":\"8874\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (citymgrtoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"verificationcode\":\"0000\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Incorrect OTP\", function() {",
							"    pm.expect(res.text()).to.include(\"Request not found or appraisal completed already\");    ",
							"});",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{agenttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\":\"{{loanrequestid}}\",\n    \"verificationcode\":\"8874\"\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/agentverification",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"agentverification"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload customer bank details- 2.2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c346ab2e-abdb-4e15-9ec6-ce16666288c3",
						"exec": [
							"pm.test(\"Customer bank details uploaded\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/uploadcustomerbankdetails\";",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"accountnumber\":\"000201654577\",",
							"    \"bank\":\"DBS Bank\",",
							"    \"ifsc\":\"ICIC000004\",",
							"    \"cancelledcheque\":\"cc271cf2-a776-44ca-8401-4120f33faa40\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"You dont have permission to update => Already done\", function() {",
							"    pm.expect(res.text()).to.include(\"You dont have permission to update\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"wrong_id\",",
							"    \"accountnumber\":\"000201654577\",",
							"    \"bank\":\"DBS Bank\",",
							"    \"ifsc\":\"ICIC000004\",",
							"    \"cancelledcheque\":\"cc271cf2-a776-44ca-8401-4120f33faa40\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid loan request id\", function() {",
							"    pm.expect(res.text()).to.include(\"You dont have permission to update\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"accountnumber\":\"000201654577\",",
							"    \"bank\":\"DBS Bank\",",
							"    \"ifsc\":\"ICIC000004\",",
							"    \"cancelledcheque\":\"cc271cf2-a776-44ca-8401-4120f33faa40\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid Token\", function() {",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"accountnumber\":\"000201654577\",",
							"    \"bank\":\"DBS Bank\",",
							"    \"ifsc\":\"ICIC000004\",",
							"    \"cancelledcheque\":\"cc271cf2-a776-44ca-8401-4120f33faa40\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (supportoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You dont have permission to update\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"accountnumber\":\"000201654577\",",
							"    \"bank\":\"DBS Bank\",",
							"    \"ifsc\":\"ICIC000004\",",
							"    \"cancelledcheque\":\"cc271cf2-a776-44ca-8401-4120f33faa40\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (citymgrtoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{agenttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\":\"{{loanrequestid}}\",\n    \"accountnumber\":\"000201654577\",\n    \"bank\":\"DBS Bank\",\n    \"ifsc\":\"ICIC000004\",\n    \"cancelledcheque\":\"cc271cf2-a776-44ca-8401-4120f33faa40\"\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/uploadcustomerbankdetails",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"uploadcustomerbankdetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "verify kyc - 2.3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44bdc0da-0bf5-4a2a-93bd-dc1839d798db",
						"exec": [
							"pm.test(\"Customer details saved successfully\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/verifykyc\";",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({   ",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"customerid\":\"5bc5746eb61a764c66f19695\",",
							"    \"customerpic\":\"ad0152f9-0fbb-4679-80bd-f1ee10de6b65\",",
							"    \"occupation\":\"other1\",",
							"    \"industry\":\"house wife\"",
							"})",
							"    }",
							"}, function (err, res) {",
							" pm.test(\"Invalid occupation\", function() {   ",
							"pm.expect(res.text()).to.include(\"Invalid occupation, please check occupation\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({   ",
							"    \"requestid\":\"wrong_id\",",
							"    \"customerid\":\"5bc5746eb61a764c66f19695\",",
							"    \"customerpic\":\"ad0152f9-0fbb-4679-80bd-f1ee10de6b65\",",
							"    \"occupation\":\"other\",",
							"    \"industry\":\"house wife\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid loan request id\", function() {",
							"    pm.expect(res.text()).to.include(\"You dont have permission to update this request\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({   ",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"customerid\":\"5bc5746eb61a764c66f19695\",",
							"    \"customerpic\":\"ad0152f9-0fbb-4679-80bd-f1ee10de6b65\",",
							"    \"occupation\":\"other\",",
							"    \"industry\":\"house wife\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid Token\", function() {",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({   ",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"customerid\":\"5bc5746eb61a764c66f19695\",",
							"    \"customerpic\":\"ad0152f9-0fbb-4679-80bd-f1ee10de6b65\",",
							"    \"occupation\":\"other\",",
							"    \"industry\":\"house wife\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (supportoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You dont have permission to update this request\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({   ",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"customerid\":\"5bc5746eb61a764c66f19695\",",
							"    \"customerpic\":\"ad0152f9-0fbb-4679-80bd-f1ee10de6b65\",",
							"    \"occupation\":\"other\",",
							"    \"industry\":\"house wife\"",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (citymgrtoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{agenttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"requestid\":\"{{loanrequestid}}\",\n    \"customerid\":\"5bc5746eb61a764c66f19695\",\n    \"customerpic\":\"ad0152f9-0fbb-4679-80bd-f1ee10de6b65\",\n    \"occupation\":\"other\",\n    \"industry\":\"house wife\"\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/verifykyc",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"verifykyc"
					]
				}
			},
			"response": []
		},
		{
			"name": "scope of loan - 2.35",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "67b58086-8264-42bc-ab34-12f9c985c833",
						"exec": [
							"pm.test(\"Gross weight for appraisal has been confirmed\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/scopeofloan\";",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"You do not have permission to edit this loan => Already done\", function() {",
							"    pm.expect(res.text()).to.include(\"You do not have permission to edit this loan\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"wrong_id\",",
							"    \"items\": [",
							"        {",
							"            \"noofitems\":2,",
							"            \"grossweight\":37.8,",
							"            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"",
							"        },",
							"        {",
							"            \"noofitems\":2,",
							"            \"grossweight\":52,",
							"            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"",
							"        },",
							"        {",
							"            \"noofitems\":5,",
							"            \"grossweight\":83.5,",
							"            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"",
							"        }",
							"    ]",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid loan request id\", function() {",
							"    pm.expect(res.text()).to.include(\"You do not have permission to edit this loan\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid Token\", function() {",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (supportoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You do not have permission to edit this loan\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (citymgrtoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"",
							"//     pm.sendRequest({",
							"//     url: url,",
							"//     method: 'POST',",
							"//     header: {",
							"//         'Content-Type': 'application/json',",
							"//         'Authorization': 'JWT ' + pm.environment.get(\"agenttoken\")",
							"//     },",
							"//     body: {",
							"//         mode: 'raw',",
							"//         raw: JSON.stringify({   ",
							"//     \"requestid\":\"ju\",",
							"//     \"customerid\":\"5bc5746eb61a764c66f19695\",",
							"//     \"customerpic\":\"ad0152f9-0fbb-4679-80bd-f1ee10de6b65\",",
							"//     \"occupation\":\"other..\",",
							"//     \"industry\":\"house wife\"",
							"// })",
							"//     }",
							"// }, function (err, res) {",
							"// pm.test(\"Invalid occupation\", function() {",
							"//     pm.expect(res.text()).to.include(\"Invalid occupation, please check occupation\");    ",
							"// });",
							"// });",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8ed0f809-cd9a-4732-96c2-024463cd1717",
						"exec": [
							"body = JSON.stringify({",
							"    \"requestid\":\"{{loanrequestid}}\",",
							"    \"items\": [",
							"        {",
							"            \"noofitems\":2,",
							"            \"grossweight\":37.8,",
							"            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"",
							"        },",
							"        {",
							"            \"noofitems\":2,",
							"            \"grossweight\":52,",
							"            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"",
							"        },",
							"        {",
							"            \"noofitems\":5,",
							"            \"grossweight\":83.5,",
							"            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"",
							"        }",
							"    ]",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{agenttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\":\"{{loanrequestid}}\",\n    \"items\": [\n        {\n            \"noofitems\":2,\n            \"grossweight\":37.8,\n            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"\n        },\n        {\n            \"noofitems\":2,\n            \"grossweight\":52,\n            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"\n        },\n        {\n        \t\"noofitems\":5,\n            \"grossweight\":83.5,\n            \"picture\":\"396064e7-dc73-4c23-aa4d-0ec320906e21\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/scopeofloan",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"scopeofloan"
					]
				}
			},
			"response": []
		},
		{
			"name": "touchstone pic - 2.36",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15a19f43-db37-4d86-9629-7de4a24b71e1",
						"exec": [
							"pm.test(\"Touchstone picture saved\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/touchstonepic\";",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"{{loanrequestid}}\",",
							"    \"touchstonepic\": \"396064e7-dc73-4c23-aa4d-0ec320906e21\" ",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"You cannot start appraisal now => Already done\", function() {",
							"    pm.expect(res.text()).to.include(\"You cannot start appraisal now\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"{{loanrequestid}}\",",
							"    \"touchstonepic\": \"396064e7-dc73-4c23-aa4d-0ec320906e21\" ",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid loan request id\", function() {",
							"    pm.expect(res.text()).to.include(\"You cannot start appraisal now\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"{{loanrequestid}}\",",
							"    \"touchstonepic\": \"396064e7-dc73-4c23-aa4d-0ec320906e21\" ",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Invalid Token\", function() {",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"{{loanrequestid}}\",",
							"    \"touchstonepic\": \"396064e7-dc73-4c23-aa4d-0ec320906e21\" ",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (supportoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You cannot start appraisal now\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"    \"requestid\":\"{{loanrequestid}}\",",
							"    \"touchstonepic\": \"396064e7-dc73-4c23-aa4d-0ec320906e21\" ",
							"})",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"agenttoken not used. Some other token detected (citymgrtoken)\", function() {",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{agenttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\":\"{{loanrequestid}}\",\n    \"touchstonepic\": \"396064e7-dc73-4c23-aa4d-0ec320906e21\" \n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/touchstonepic",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"touchstonepic"
					]
				}
			},
			"response": []
		},
		{
			"name": "appraisal - 2.4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1400f66-569b-42d6-8815-d86a0c242866",
						"exec": [
							"pm.test(\"Appraisal\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"url = pm.environment.get(\"devurl\") + \"/api/agent/appraisal\";",
							"",
							"//CHECK FOR JEWEL TYPE ID NOT FOUND IN HISTORY",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body3",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Jewel type ID is wrong\", function() {",
							"    pm.expect(res.text()).to.include(\"Jewel type not found in records\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body1",
							"    }",
							"}, function (err, res) {",
							"pm.test(\"Gold price not updated\", function() {",
							"",
							"    pm.expect(res.text()).to.include(\"Ask admin to update gold price for today\");",
							"    //console.log(\"1\");",
							"});",
							"//console.log(\"2\");",
							"});",
							"",
							"",
							"",
							"",
							"pm.test(\"Invalid loan request id\", function() {",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '+ pm.environment.get(\"agenttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body2",
							"    }",
							"}, function (err, res) {",
							"    pm.expect(res.text()).to.include(\"Request not found, or no permission\");",
							"    //console.log(\"1\");",
							"});",
							"//console.log(\"2\");",
							"});",
							"",
							"",
							"",
							"pm.test(\"Invalid Token\", function() {",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT '",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body1",
							"    }",
							"}, function (err, res) {",
							"    pm.expect(res.text()).to.include(\"Invalid Token\");",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"pm.test(\"agenttoken not used. Some other token detected (supportoken)\", function() {",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"supporttoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body1",
							"    }",
							"}, function (err, res) {",
							"    pm.expect(res.text()).to.include(\"Request not found, or no permission\");    ",
							"});",
							"});",
							"",
							"",
							"",
							"",
							"pm.test(\"agenttoken not used. Some other token detected (citymgrtoken)\", function() {",
							"    pm.sendRequest({",
							"    url: url,",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'JWT ' + pm.environment.get(\"citymgrtoken\")",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: body1",
							"    }",
							"}, function (err, res) {",
							"    pm.expect(res.text()).to.include(\"You are not a Rupeek executive\");    ",
							"});",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7e96c4c6-ec7b-402f-8fe0-0c72f1842ce0",
						"exec": [
							"body1 = JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"items\": [{",
							"      \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 48.3,",
							"    \"grossweight\" : 48.3,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 1,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211724\",",
							"    \"picture\" : \"43994292-332e-4d28-935c-51f2b9af742f\",",
							"    \"purity\" : 22,",
							"    \"stoneadjustment\" : 0,",
							"    \"stonepicture\" : \"b0c71069-bbf0-4296-ad25-059fa747ca57\",",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 36.9,",
							"    \"grossweight\" : 37.4,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 1,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211877\",",
							"    \"picture\" : \"40735576-4459-4a31-bc10-1e8544e0167d\",",
							"    \"purity\" : 22,",
							"    \"stoneadjustment\" : 0.5,",
							"    \"stonepicture\" : \"dac5725a-75a5-4327-9068-d4cfa45f04b8\",",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 65.8,",
							"    \"grossweight\" : 65.8,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 2,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211737\",",
							"    \"picture\" : \"20f51736-d6ba-4030-9ce2-1ae2ba77ef12\",",
							"    \"purity\" : 22,",
							"    \"smartdna\" : false,",
							"    \"stoneadjustment\" : 0,",
							"    \"stonepicture\" : \"bf24193b-23e8-46c2-8dd9-5285384f4982\",",
							"    \"ornamenttype\" : \"Chain\",",
							"    \"haircut\" : 0.5,",
							"    \"goldprice\" : 2794,",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\",",
							"    \"damagetype\":[\"bent\",\"wellused\",\"cut\",\"missingstone\"]",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 22,",
							"    \"grossweight\" : 22.4,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 3,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211738\",",
							"    \"picture\" : \"cccbf6b9-77d9-45cb-94a6-178c28b8f720\",",
							"    \"purity\" : 22,",
							"    \"smartdna\" : false,",
							"    \"stoneadjustment\" : 0.4,",
							"    \"stonepicture\" : \"520c639c-ee36-4bd8-85d3-d609279be527\",",
							"    \"ornamenttype\" : \"Finger Ring\",",
							"    \"haircut\" : 0.5,",
							"    \"goldprice\" : 2794,",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"",
							"  }]",
							"});",
							"",
							"",
							"body2 = JSON.stringify({",
							"    \"requestid\":\"heyya\",",
							"    \"items\": [{",
							"      \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 48.3,",
							"    \"grossweight\" : 48.3,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 1,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211724\",",
							"    \"picture\" : \"43994292-332e-4d28-935c-51f2b9af742f\",",
							"    \"purity\" : 22,",
							"    \"stoneadjustment\" : 0,",
							"    \"stonepicture\" : \"b0c71069-bbf0-4296-ad25-059fa747ca57\",",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 36.9,",
							"    \"grossweight\" : 37.4,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 1,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211877\",",
							"    \"picture\" : \"40735576-4459-4a31-bc10-1e8544e0167d\",",
							"    \"purity\" : 22,",
							"    \"stoneadjustment\" : 0.5,",
							"    \"stonepicture\" : \"dac5725a-75a5-4327-9068-d4cfa45f04b8\",",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 65.8,",
							"    \"grossweight\" : 65.8,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 2,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211737\",",
							"    \"picture\" : \"20f51736-d6ba-4030-9ce2-1ae2ba77ef12\",",
							"    \"purity\" : 22,",
							"    \"smartdna\" : false,",
							"    \"stoneadjustment\" : 0,",
							"    \"stonepicture\" : \"bf24193b-23e8-46c2-8dd9-5285384f4982\",",
							"    \"ornamenttype\" : \"Chain\",",
							"    \"haircut\" : 0.5,",
							"    \"goldprice\" : 2794,",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\",",
							"    \"damagetype\":[\"bent\",\"wellused\",\"cut\",\"missingstone\"]",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 22,",
							"    \"grossweight\" : 22.4,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 3,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211738\",",
							"    \"picture\" : \"cccbf6b9-77d9-45cb-94a6-178c28b8f720\",",
							"    \"purity\" : 22,",
							"    \"smartdna\" : false,",
							"    \"stoneadjustment\" : 0.4,",
							"    \"stonepicture\" : \"520c639c-ee36-4bd8-85d3-d609279be527\",",
							"    \"ornamenttype\" : \"Finger Ring\",",
							"    \"haircut\" : 0.5,",
							"    \"goldprice\" : 2794,",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"",
							"  }]",
							"});",
							"",
							"",
							"body3 = JSON.stringify({",
							"    \"requestid\":pm.environment.get(\"loanrequestid\"),",
							"    \"items\": [{",
							"      \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 48.3,",
							"    \"grossweight\" : 48.3,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 1,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211724\",",
							"    \"picture\" : \"43994292-332e-4d28-935c-51f2b9af742f\",",
							"    \"purity\" : 22,",
							"    \"stoneadjustment\" : 0,",
							"    \"stonepicture\" : \"b0c71069-bbf0-4296-ad25-059fa747ca57\",",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc3311\"",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 36.9,",
							"    \"grossweight\" : 37.4,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 1,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211877\",",
							"    \"picture\" : \"40735576-4459-4a31-bc10-1e8544e0167d\",",
							"    \"purity\" : 22,",
							"    \"stoneadjustment\" : 0.5,",
							"    \"stonepicture\" : \"dac5725a-75a5-4327-9068-d4cfa45f04b8\",",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 65.8,",
							"    \"grossweight\" : 65.8,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 2,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211737\",",
							"    \"picture\" : \"20f51736-d6ba-4030-9ce2-1ae2ba77ef12\",",
							"    \"purity\" : 22,",
							"    \"smartdna\" : false,",
							"    \"stoneadjustment\" : 0,",
							"    \"stonepicture\" : \"bf24193b-23e8-46c2-8dd9-5285384f4982\",",
							"    \"ornamenttype\" : \"Chain\",",
							"    \"haircut\" : 0.5,",
							"    \"goldprice\" : 2794,",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\",",
							"    \"damagetype\":[\"bent\",\"wellused\",\"cut\",\"missingstone\"]",
							"  },",
							"  {",
							"    \"damaged\" : false,",
							"    \"deviceinfo\" : {",
							"      \"device\" : \"SM-J701F\",",
							"      \"manufacturer\" : \"samsung\"",
							"    },",
							"    \"eligibleweight\" : 22,",
							"    \"grossweight\" : 22.4,",
							"    \"hasstone\" : false,",
							"    \"haswax\" : false,",
							"    \"ishallmark\" : false,",
							"    \"noofitems\" : 3,",
							"    \"otheradjustment\" : 0,",
							"    \"packno\" : \"211738\",",
							"    \"picture\" : \"cccbf6b9-77d9-45cb-94a6-178c28b8f720\",",
							"    \"purity\" : 22,",
							"    \"smartdna\" : false,",
							"    \"stoneadjustment\" : 0.4,",
							"    \"stonepicture\" : \"520c639c-ee36-4bd8-85d3-d609279be527\",",
							"    \"ornamenttype\" : \"Finger Ring\",",
							"    \"haircut\" : 0.5,",
							"    \"goldprice\" : 2794,",
							"    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc3311\" //changed ornament id here",
							"  }]",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{agenttoken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\":\"{{loanrequestid}}\",\n    \"items\": [{\n      \"damaged\" : false,\n    \"deviceinfo\" : {\n      \"device\" : \"SM-J701F\",\n      \"manufacturer\" : \"samsung\"\n    },\n    \"eligibleweight\" : 48.3,\n    \"grossweight\" : 48.3,\n    \"hasstone\" : false,\n    \"haswax\" : false,\n    \"ishallmark\" : false,\n    \"noofitems\" : 1,\n    \"otheradjustment\" : 0,\n    \"packno\" : \"211724\",\n    \"picture\" : \"43994292-332e-4d28-935c-51f2b9af742f\",\n    \"purity\" : 22,\n    \"stoneadjustment\" : 0,\n    \"stonepicture\" : \"b0c71069-bbf0-4296-ad25-059fa747ca57\",\n    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"\n  },\n  {\n    \"damaged\" : false,\n    \"deviceinfo\" : {\n      \"device\" : \"SM-J701F\",\n      \"manufacturer\" : \"samsung\"\n    },\n    \"eligibleweight\" : 36.9,\n    \"grossweight\" : 37.4,\n    \"hasstone\" : false,\n    \"haswax\" : false,\n    \"ishallmark\" : false,\n    \"noofitems\" : 1,\n    \"otheradjustment\" : 0,\n    \"packno\" : \"211877\",\n    \"picture\" : \"40735576-4459-4a31-bc10-1e8544e0167d\",\n    \"purity\" : 22,\n    \"stoneadjustment\" : 0.5,\n    \"stonepicture\" : \"dac5725a-75a5-4327-9068-d4cfa45f04b8\",\n    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"\n  },\n  {\n    \"damaged\" : false,\n    \"deviceinfo\" : {\n      \"device\" : \"SM-J701F\",\n      \"manufacturer\" : \"samsung\"\n    },\n    \"eligibleweight\" : 65.8,\n    \"grossweight\" : 65.8,\n    \"hasstone\" : false,\n    \"haswax\" : false,\n    \"ishallmark\" : false,\n    \"noofitems\" : 2,\n    \"otheradjustment\" : 0,\n    \"packno\" : \"211737\",\n    \"picture\" : \"20f51736-d6ba-4030-9ce2-1ae2ba77ef12\",\n    \"purity\" : 22,\n    \"smartdna\" : false,\n    \"stoneadjustment\" : 0,\n    \"stonepicture\" : \"bf24193b-23e8-46c2-8dd9-5285384f4982\",\n    \"ornamenttype\" : \"Chain\",\n    \"haircut\" : 0.5,\n    \"goldprice\" : 2794,\n    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\",\n    \"damagetype\":[\"bent\",\"wellused\",\"cut\",\"missingstone\"]\n  },\n  {\n    \"damaged\" : false,\n    \"deviceinfo\" : {\n      \"device\" : \"SM-J701F\",\n      \"manufacturer\" : \"samsung\"\n    },\n    \"eligibleweight\" : 22,\n    \"grossweight\" : 22.4,\n    \"hasstone\" : false,\n    \"haswax\" : false,\n    \"ishallmark\" : false,\n    \"noofitems\" : 3,\n    \"otheradjustment\" : 0,\n    \"packno\" : \"211738\",\n    \"picture\" : \"cccbf6b9-77d9-45cb-94a6-178c28b8f720\",\n    \"purity\" : 22,\n    \"smartdna\" : false,\n    \"stoneadjustment\" : 0.4,\n    \"stonepicture\" : \"520c639c-ee36-4bd8-85d3-d609279be527\",\n    \"ornamenttype\" : \"Finger Ring\",\n    \"haircut\" : 0.5,\n    \"goldprice\" : 2794,\n    \"ornamenttypeid\" : \"59cb8a6a6e6d85277b55dc33\"\n  }]\n}"
				},
				"url": {
					"raw": "{{devurl}}/api/agent/appraisal",
					"host": [
						"{{devurl}}"
					],
					"path": [
						"api",
						"agent",
						"appraisal"
					]
				}
			},
			"response": []
		}
	]
}